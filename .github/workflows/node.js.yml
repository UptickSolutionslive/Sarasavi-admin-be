name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  # code-quality:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
    
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '20.x'

  #   - name: Install dependencies
  #     run: npm install

  #   - name: Run ESLint
  #     run: npm run lint

  push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/sarasavi-admin-be






# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [21.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: |
#         touch .env
#         echo "${{ secrets.MONGO_URL }}" > .env
#     - run: pm2 restart api
        
